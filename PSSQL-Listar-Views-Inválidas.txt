[CmdletBinding()] 
param() 

#."lib\Invoke-Sqlcmd3.ps1"

function Invoke-SQL {
    param(
        [string] $dataSource = $(throw "Please specify a server."),
        [string] $database = "master",
        [string] $sqlCommand = $(throw "Please specify a query.")
      )

    $connectionString = "Data Source=$dataSource;Integrated Security=SSPI;Initial Catalog=$database"

    $connection = new-object system.data.SqlClient.SQLConnection($connectionString)
    $command = new-object system.data.sqlclient.sqlcommand($sqlCommand,$connection)
    $connection.Open()

    $adapter = New-Object System.Data.sqlclient.sqlDataAdapter $command
    $dataset = New-Object System.Data.DataSet
    $adapter.Fill($dataSet) | Out-Null

    $connection.Close()
    $dataSet.Tables
}

$Erro = @()

$QuerySql =

    #TODO: Recompilar views
    try{
        foreach ($row in $ResultTotal){    
            $MensagemError = ''
            $QuerySqlRow =
            try {
                $Result = Invoke-sql
            } catch {
                Write-Host "Nao foi possivel recompilar a view $($row.owner).$($row.object_name)"
            }
        }
    } catch {
        Throw "Nao foi possivel recompilar views."
      }
 
    #Recuperar o texto ERRO das views que AINDA estao invalidas
    try{
        foreach ($row in $ResultTotal){
    
            $MensagemError = ''
            $QuerySqlRow =  " ";
            
            try {
                $Result = Invoke-Sql $row.name $Username $Password $QuerySqlRow
            } catch {
                Throw "Nao possivel recuperar o texto de erro da view $($row.owner).$($row.object_name)"
            }
   
            $MensagemError = $Result.text
        
            $irheader = [ordered] @{
                'Banco'=$row.name 
                'Owner'= $row.owner 
                'View' = $row.object_name 
                'Motivo' = $MensagemError} 
        
        
            $Erro+= New-Object -type PSObject -prop $irheader
        
        }
    } catch {
        Write-host $_.Exception.Message
        Throw "Nao foi possivel recuperar o texto do erro da view invalida."
      }
    # Enviar email com Banco, Proprietario, View, Motivo
    try { 
        $conteudo = $Erro | Sort-Object -Property 'Banco' | Format-Table -Property @{e='Banco'; width = 9},@{e='Owner'; width = 8}, @{e='View'; width = 31}, @{e='Motivo'; width = 70}  | Out-String -Width 250
        Send-MailMessage -From suporte.dba@bndes.gov.br -Body $conteudo -Subject "Views Invalidas em cada Instancia" -To suporte.dba@bndes.gov.br -SmtpServer mail.bndes.net
        $conteudo
    } catch {
        Throw "Nao foi possivel enviar o email com as views invalidas e o motivo."
      }
} catch {
    Write-Host "`n"
    Write-host $_.Exception.Message
    Write-Host "`nErro ao listar/recompilar views."
    Exit 1
}
 
       